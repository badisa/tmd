name: Unit Tests

on:
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint:
    runs-on: [self-hosted, gpu]
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        CMAKE_ARGS=-DCUDA_ARCH=75 pip install -e .[dev]

    - name: Verify Pre-commit
      run: |
        export PATH=$PATH:/usr/local/cuda/bin/
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
        make CUDA_ARCH=75 verify


  no_gpu_tests:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        CMAKE_ARGS=-DCUDA_ARCH=75 pip install -e .[test]

    - name: Run No GPU Tests
      run: make nogpu_tests

  no_cuda_tests:
    runs-on: self-hosted
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda Env
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda env create -f environment.yml | conda env update -f environment.yml
      - name: Install requirements
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          pip install -r requirements.txt
          pip install -e .[dev,test]
      - name: Run No Cuda Tests
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          make nocuda_tests

  unit_tests:
    runs-on: [self-hosted, gpu]
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda Env
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda env create -f environment.yml | conda env update -f environment.yml
      - name: Install requirements
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          pip install -r requirements.txt
          pip install -e .[dev,test]
      - name: Run Unit Tests
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          make unit_tests

  memory_tests:
    runs-on: [self-hosted, gpu]
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda Env
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda env create -f environment.yml | conda env update -f environment.yml
      - name: Install requirements
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          pip install -r requirements.txt
          pip install -e .[dev,test]
      - name: Run Memory Tests
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          make memcheck_tests

  fixed_output_tests:
    runs-on: [self-hosted, gpu]
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda Env
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda env create -f environment.yml | conda env update -f environment.yml
      - name: Install requirements
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          pip install -r requirements.txt
          pip install -e .[dev,test]
      - name: Run Fixed Output Tests
        run: |
          source ~/miniforge3/etc/profile.d/conda.sh
          conda activate tmd
          export PATH=$PATH:/usr/local/cuda/bin/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
          make fixed_output_tests
